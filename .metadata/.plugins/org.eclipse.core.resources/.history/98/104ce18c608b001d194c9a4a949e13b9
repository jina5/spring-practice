package com.jina.project.member.controller;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.jina.project.member.model.service.MemberService;
import com.jina.project.member.model.vo.Member;

/*
 * RequestMapping("주소")
 * ContextPath/주소/
 */

/*
 * web이 요청 받고 응답을 해줌.
 * 사용자가 로그인 클릭을 하면 -> 요청 안에 담긴 파라미터들을 가지고 응답을 해줌.
 * 요청 실행 후 파라미터 정보는 없어짐.
 * 로그인 정보 저장해야 한다. 브라우저 : 세션, 서버 : 컨텍스트 (컨텍스트는 서버 메모리를 먹기떄문에 쓰지 않음)
 */
@RequestMapping("/member")
@Controller
public class MemberController {

	@Autowired // 컴포넌트 매핑
	private MemberService ms;

	@GetMapping("/login.do")
	public String moveLogin() {
		return "member/login";
	}
	
	@PostMapping("/login.do")
	public String login(@RequestParam String id, @RequestParam String password, HttpSession session, Model model) {
		Map<String, String> map = new HashMap<>();
		map.put("id", id);
		map.put("pwd", password);
		Member loginMember = ms.login(map);
		if (loginMember == null) {
			model.addAttribute("msg", "login 실패");
			model.addAttribute("location", "/");
			return "common/msg"; // "/WEB-INF/views/"
		}
		session.setAttribute("loginMember", loginMember);
		model.addAttribute("msg", "login 성공");
		model.addAttribute("location", "/");
		return "common/msg";
	}
	
	@GetMapping("/join.do")
	public String movejoin() {
		return "member/join";
	}
	
	@PostMapping("/join.do")
	public String join(@RequestParam Map<String, String> map, Model model) {
		// map {key:value}}
		Member m = new Member();
		m.setId(map.get("id"));
		m.setPassword(map.get("pwd"));
		int result = ms.join(m);
		// insert, delete, update return : 1=성공, 0=실패
		if (result > 0) {
			model.addAttribute("msg", "login 성공");
			model.addAttribute("location", "home");
			return "common/msg";

		} else {
			model.addAttribute("msg", "login 실패");
			model.addAttribute("location", "home");
			return "common/msg";
		}
	}
	
	@GetMapping("dupId")
	public ResponseEntity<Boolean> dupId(@RequestParam String id){ //ajax니까 페이지 return 아니고 정보를 return하도록...
		boolean flag = true;
		Member result = ms.findId(id);
		if (result ==null) {
			flag = false;
		}
		return new ResponseEntity<Boolean>(flag, HttpStatus.OK);
	}
}
